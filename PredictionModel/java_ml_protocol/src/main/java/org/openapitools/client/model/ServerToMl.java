/*
 * Базовые модели для запросов
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Параметры для ML модели от сервера
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-07-24T01:22:48.582079612+03:00[Europe/Moscow]")
public class ServerToMl {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_LATITUDE = "latitude";
  @SerializedName(SERIALIZED_NAME_LATITUDE)
  private String latitude;

  public static final String SERIALIZED_NAME_LONGITUDE = "longitude";
  @SerializedName(SERIALIZED_NAME_LONGITUDE)
  private Integer longitude = null;

  public static final String SERIALIZED_NAME_COEFF_NEAREST_POPULARITY = "coeffNearestPopularity";
  @SerializedName(SERIALIZED_NAME_COEFF_NEAREST_POPULARITY)
  private Integer coeffNearestPopularity = null;

  public static final String SERIALIZED_NAME_CAR_AVAILABILITY = "carAvailability";
  @SerializedName(SERIALIZED_NAME_CAR_AVAILABILITY)
  private Boolean carAvailability;

  public static final String SERIALIZED_NAME_BUS_AVAILABILITY = "busAvailability";
  @SerializedName(SERIALIZED_NAME_BUS_AVAILABILITY)
  private Boolean busAvailability;

  public static final String SERIALIZED_NAME_BIG_CAR_AVAILABILITY = "bigCarAvailability";
  @SerializedName(SERIALIZED_NAME_BIG_CAR_AVAILABILITY)
  private Boolean bigCarAvailability;

  public static final String SERIALIZED_NAME_SHIP_AVAILABILITY = "shipAvailability";
  @SerializedName(SERIALIZED_NAME_SHIP_AVAILABILITY)
  private Boolean shipAvailability;

  public static final String SERIALIZED_NAME_PLANE_AVAILABILITY = "planeAvailability";
  @SerializedName(SERIALIZED_NAME_PLANE_AVAILABILITY)
  private Boolean planeAvailability;

  public static final String SERIALIZED_NAME_THEATRE = "theatre";
  @SerializedName(SERIALIZED_NAME_THEATRE)
  private Boolean theatre;

  public static final String SERIALIZED_NAME_ETHNIC_CENTER = "ethnicCenter";
  @SerializedName(SERIALIZED_NAME_ETHNIC_CENTER)
  private Boolean ethnicCenter;

  public static final String SERIALIZED_NAME_MUSEUM = "museum";
  @SerializedName(SERIALIZED_NAME_MUSEUM)
  private Boolean museum;

  public static final String SERIALIZED_NAME_CHILDRENS_TOURISM = "childrensTourism";
  @SerializedName(SERIALIZED_NAME_CHILDRENS_TOURISM)
  private Boolean childrensTourism;

  public static final String SERIALIZED_NAME_CITY_ATTRACTIONS = "cityAttractions";
  @SerializedName(SERIALIZED_NAME_CITY_ATTRACTIONS)
  private Boolean cityAttractions;

  public static final String SERIALIZED_NAME_ATTRACTION = "attraction";
  @SerializedName(SERIALIZED_NAME_ATTRACTION)
  private Boolean attraction;

  public static final String SERIALIZED_NAME_CULTURAL_CENTRE = "culturalCentre";
  @SerializedName(SERIALIZED_NAME_CULTURAL_CENTRE)
  private Boolean culturalCentre;

  public static final String SERIALIZED_NAME_SHIPBUILDING = "shipbuilding";
  @SerializedName(SERIALIZED_NAME_SHIPBUILDING)
  private Boolean shipbuilding;

  public static final String SERIALIZED_NAME_NATIONAL_PARK = "nationalPark";
  @SerializedName(SERIALIZED_NAME_NATIONAL_PARK)
  private Boolean nationalPark;

  public static final String SERIALIZED_NAME_SANATORIUM = "sanatorium";
  @SerializedName(SERIALIZED_NAME_SANATORIUM)
  private Boolean sanatorium;

  public static final String SERIALIZED_NAME_LOOKOUT = "lookout";
  @SerializedName(SERIALIZED_NAME_LOOKOUT)
  private Boolean lookout;

  public static final String SERIALIZED_NAME_SKI_RESORT = "skiResort";
  @SerializedName(SERIALIZED_NAME_SKI_RESORT)
  private Boolean skiResort;

  public ServerToMl() {
  }

  public ServerToMl name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Имя объекта
   * @return name
  **/
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public ServerToMl latitude(String latitude) {
    
    this.latitude = latitude;
    return this;
  }

   /**
   * Широта
   * @return latitude
  **/
  @javax.annotation.Nullable
  public String getLatitude() {
    return latitude;
  }


  public void setLatitude(String latitude) {
    this.latitude = latitude;
  }


  public ServerToMl longitude(Integer longitude) {
    
    this.longitude = longitude;
    return this;
  }

   /**
   * Долгота
   * @return longitude
  **/
  @javax.annotation.Nullable
  public Integer getLongitude() {
    return longitude;
  }


  public void setLongitude(Integer longitude) {
    this.longitude = longitude;
  }


  public ServerToMl coeffNearestPopularity(Integer coeffNearestPopularity) {
    
    this.coeffNearestPopularity = coeffNearestPopularity;
    return this;
  }

   /**
   * Коэффициент кол-ва запросов в месяц окружающих объектов
   * @return coeffNearestPopularity
  **/
  @javax.annotation.Nullable
  public Integer getCoeffNearestPopularity() {
    return coeffNearestPopularity;
  }


  public void setCoeffNearestPopularity(Integer coeffNearestPopularity) {
    this.coeffNearestPopularity = coeffNearestPopularity;
  }


  public ServerToMl carAvailability(Boolean carAvailability) {
    
    this.carAvailability = carAvailability;
    return this;
  }

   /**
   * Доступность автомобиля
   * @return carAvailability
  **/
  @javax.annotation.Nullable
  public Boolean getCarAvailability() {
    return carAvailability;
  }


  public void setCarAvailability(Boolean carAvailability) {
    this.carAvailability = carAvailability;
  }


  public ServerToMl busAvailability(Boolean busAvailability) {
    
    this.busAvailability = busAvailability;
    return this;
  }

   /**
   * Доступность автобуса
   * @return busAvailability
  **/
  @javax.annotation.Nullable
  public Boolean getBusAvailability() {
    return busAvailability;
  }


  public void setBusAvailability(Boolean busAvailability) {
    this.busAvailability = busAvailability;
  }


  public ServerToMl bigCarAvailability(Boolean bigCarAvailability) {
    
    this.bigCarAvailability = bigCarAvailability;
    return this;
  }

   /**
   * Доступность внедорожника
   * @return bigCarAvailability
  **/
  @javax.annotation.Nullable
  public Boolean getBigCarAvailability() {
    return bigCarAvailability;
  }


  public void setBigCarAvailability(Boolean bigCarAvailability) {
    this.bigCarAvailability = bigCarAvailability;
  }


  public ServerToMl shipAvailability(Boolean shipAvailability) {
    
    this.shipAvailability = shipAvailability;
    return this;
  }

   /**
   * Доступность внедорожника
   * @return shipAvailability
  **/
  @javax.annotation.Nullable
  public Boolean getShipAvailability() {
    return shipAvailability;
  }


  public void setShipAvailability(Boolean shipAvailability) {
    this.shipAvailability = shipAvailability;
  }


  public ServerToMl planeAvailability(Boolean planeAvailability) {
    
    this.planeAvailability = planeAvailability;
    return this;
  }

   /**
   * Доступность самолета
   * @return planeAvailability
  **/
  @javax.annotation.Nullable
  public Boolean getPlaneAvailability() {
    return planeAvailability;
  }


  public void setPlaneAvailability(Boolean planeAvailability) {
    this.planeAvailability = planeAvailability;
  }


  public ServerToMl theatre(Boolean theatre) {
    
    this.theatre = theatre;
    return this;
  }

   /**
   * Театр
   * @return theatre
  **/
  @javax.annotation.Nullable
  public Boolean getTheatre() {
    return theatre;
  }


  public void setTheatre(Boolean theatre) {
    this.theatre = theatre;
  }


  public ServerToMl ethnicCenter(Boolean ethnicCenter) {
    
    this.ethnicCenter = ethnicCenter;
    return this;
  }

   /**
   * Этнический центр
   * @return ethnicCenter
  **/
  @javax.annotation.Nullable
  public Boolean getEthnicCenter() {
    return ethnicCenter;
  }


  public void setEthnicCenter(Boolean ethnicCenter) {
    this.ethnicCenter = ethnicCenter;
  }


  public ServerToMl museum(Boolean museum) {
    
    this.museum = museum;
    return this;
  }

   /**
   * Музей
   * @return museum
  **/
  @javax.annotation.Nullable
  public Boolean getMuseum() {
    return museum;
  }


  public void setMuseum(Boolean museum) {
    this.museum = museum;
  }


  public ServerToMl childrensTourism(Boolean childrensTourism) {
    
    this.childrensTourism = childrensTourism;
    return this;
  }

   /**
   * Детский туризм
   * @return childrensTourism
  **/
  @javax.annotation.Nullable
  public Boolean getChildrensTourism() {
    return childrensTourism;
  }


  public void setChildrensTourism(Boolean childrensTourism) {
    this.childrensTourism = childrensTourism;
  }


  public ServerToMl cityAttractions(Boolean cityAttractions) {
    
    this.cityAttractions = cityAttractions;
    return this;
  }

   /**
   * Городские достопримечательности
   * @return cityAttractions
  **/
  @javax.annotation.Nullable
  public Boolean getCityAttractions() {
    return cityAttractions;
  }


  public void setCityAttractions(Boolean cityAttractions) {
    this.cityAttractions = cityAttractions;
  }


  public ServerToMl attraction(Boolean attraction) {
    
    this.attraction = attraction;
    return this;
  }

   /**
   * Достопримечательность
   * @return attraction
  **/
  @javax.annotation.Nullable
  public Boolean getAttraction() {
    return attraction;
  }


  public void setAttraction(Boolean attraction) {
    this.attraction = attraction;
  }


  public ServerToMl culturalCentre(Boolean culturalCentre) {
    
    this.culturalCentre = culturalCentre;
    return this;
  }

   /**
   * Культурный центр
   * @return culturalCentre
  **/
  @javax.annotation.Nullable
  public Boolean getCulturalCentre() {
    return culturalCentre;
  }


  public void setCulturalCentre(Boolean culturalCentre) {
    this.culturalCentre = culturalCentre;
  }


  public ServerToMl shipbuilding(Boolean shipbuilding) {
    
    this.shipbuilding = shipbuilding;
    return this;
  }

   /**
   * Судостроение
   * @return shipbuilding
  **/
  @javax.annotation.Nullable
  public Boolean getShipbuilding() {
    return shipbuilding;
  }


  public void setShipbuilding(Boolean shipbuilding) {
    this.shipbuilding = shipbuilding;
  }


  public ServerToMl nationalPark(Boolean nationalPark) {
    
    this.nationalPark = nationalPark;
    return this;
  }

   /**
   * Нац. парк
   * @return nationalPark
  **/
  @javax.annotation.Nullable
  public Boolean getNationalPark() {
    return nationalPark;
  }


  public void setNationalPark(Boolean nationalPark) {
    this.nationalPark = nationalPark;
  }


  public ServerToMl sanatorium(Boolean sanatorium) {
    
    this.sanatorium = sanatorium;
    return this;
  }

   /**
   * Санаторий
   * @return sanatorium
  **/
  @javax.annotation.Nullable
  public Boolean getSanatorium() {
    return sanatorium;
  }


  public void setSanatorium(Boolean sanatorium) {
    this.sanatorium = sanatorium;
  }


  public ServerToMl lookout(Boolean lookout) {
    
    this.lookout = lookout;
    return this;
  }

   /**
   * Обзорная площадка
   * @return lookout
  **/
  @javax.annotation.Nullable
  public Boolean getLookout() {
    return lookout;
  }


  public void setLookout(Boolean lookout) {
    this.lookout = lookout;
  }


  public ServerToMl skiResort(Boolean skiResort) {
    
    this.skiResort = skiResort;
    return this;
  }

   /**
   * Горнолыжный курорт
   * @return skiResort
  **/
  @javax.annotation.Nullable
  public Boolean getSkiResort() {
    return skiResort;
  }


  public void setSkiResort(Boolean skiResort) {
    this.skiResort = skiResort;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServerToMl serverToMl = (ServerToMl) o;
    return Objects.equals(this.name, serverToMl.name) &&
        Objects.equals(this.latitude, serverToMl.latitude) &&
        Objects.equals(this.longitude, serverToMl.longitude) &&
        Objects.equals(this.coeffNearestPopularity, serverToMl.coeffNearestPopularity) &&
        Objects.equals(this.carAvailability, serverToMl.carAvailability) &&
        Objects.equals(this.busAvailability, serverToMl.busAvailability) &&
        Objects.equals(this.bigCarAvailability, serverToMl.bigCarAvailability) &&
        Objects.equals(this.shipAvailability, serverToMl.shipAvailability) &&
        Objects.equals(this.planeAvailability, serverToMl.planeAvailability) &&
        Objects.equals(this.theatre, serverToMl.theatre) &&
        Objects.equals(this.ethnicCenter, serverToMl.ethnicCenter) &&
        Objects.equals(this.museum, serverToMl.museum) &&
        Objects.equals(this.childrensTourism, serverToMl.childrensTourism) &&
        Objects.equals(this.cityAttractions, serverToMl.cityAttractions) &&
        Objects.equals(this.attraction, serverToMl.attraction) &&
        Objects.equals(this.culturalCentre, serverToMl.culturalCentre) &&
        Objects.equals(this.shipbuilding, serverToMl.shipbuilding) &&
        Objects.equals(this.nationalPark, serverToMl.nationalPark) &&
        Objects.equals(this.sanatorium, serverToMl.sanatorium) &&
        Objects.equals(this.lookout, serverToMl.lookout) &&
        Objects.equals(this.skiResort, serverToMl.skiResort);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, latitude, longitude, coeffNearestPopularity, carAvailability, busAvailability, bigCarAvailability, shipAvailability, planeAvailability, theatre, ethnicCenter, museum, childrensTourism, cityAttractions, attraction, culturalCentre, shipbuilding, nationalPark, sanatorium, lookout, skiResort);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServerToMl {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    latitude: ").append(toIndentedString(latitude)).append("\n");
    sb.append("    longitude: ").append(toIndentedString(longitude)).append("\n");
    sb.append("    coeffNearestPopularity: ").append(toIndentedString(coeffNearestPopularity)).append("\n");
    sb.append("    carAvailability: ").append(toIndentedString(carAvailability)).append("\n");
    sb.append("    busAvailability: ").append(toIndentedString(busAvailability)).append("\n");
    sb.append("    bigCarAvailability: ").append(toIndentedString(bigCarAvailability)).append("\n");
    sb.append("    shipAvailability: ").append(toIndentedString(shipAvailability)).append("\n");
    sb.append("    planeAvailability: ").append(toIndentedString(planeAvailability)).append("\n");
    sb.append("    theatre: ").append(toIndentedString(theatre)).append("\n");
    sb.append("    ethnicCenter: ").append(toIndentedString(ethnicCenter)).append("\n");
    sb.append("    museum: ").append(toIndentedString(museum)).append("\n");
    sb.append("    childrensTourism: ").append(toIndentedString(childrensTourism)).append("\n");
    sb.append("    cityAttractions: ").append(toIndentedString(cityAttractions)).append("\n");
    sb.append("    attraction: ").append(toIndentedString(attraction)).append("\n");
    sb.append("    culturalCentre: ").append(toIndentedString(culturalCentre)).append("\n");
    sb.append("    shipbuilding: ").append(toIndentedString(shipbuilding)).append("\n");
    sb.append("    nationalPark: ").append(toIndentedString(nationalPark)).append("\n");
    sb.append("    sanatorium: ").append(toIndentedString(sanatorium)).append("\n");
    sb.append("    lookout: ").append(toIndentedString(lookout)).append("\n");
    sb.append("    skiResort: ").append(toIndentedString(skiResort)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("name");
    openapiFields.add("latitude");
    openapiFields.add("longitude");
    openapiFields.add("coeffNearestPopularity");
    openapiFields.add("carAvailability");
    openapiFields.add("busAvailability");
    openapiFields.add("bigCarAvailability");
    openapiFields.add("shipAvailability");
    openapiFields.add("planeAvailability");
    openapiFields.add("theatre");
    openapiFields.add("ethnicCenter");
    openapiFields.add("museum");
    openapiFields.add("childrensTourism");
    openapiFields.add("cityAttractions");
    openapiFields.add("attraction");
    openapiFields.add("culturalCentre");
    openapiFields.add("shipbuilding");
    openapiFields.add("nationalPark");
    openapiFields.add("sanatorium");
    openapiFields.add("lookout");
    openapiFields.add("skiResort");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ServerToMl
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!ServerToMl.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ServerToMl is not found in the empty JSON string", ServerToMl.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!ServerToMl.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ServerToMl` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("latitude") != null && !jsonObj.get("latitude").isJsonNull()) && !jsonObj.get("latitude").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `latitude` to be a primitive type in the JSON string but got `%s`", jsonObj.get("latitude").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ServerToMl.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ServerToMl' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ServerToMl> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ServerToMl.class));

       return (TypeAdapter<T>) new TypeAdapter<ServerToMl>() {
           @Override
           public void write(JsonWriter out, ServerToMl value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ServerToMl read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ServerToMl given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ServerToMl
  * @throws IOException if the JSON string is invalid with respect to ServerToMl
  */
  public static ServerToMl fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ServerToMl.class);
  }

 /**
  * Convert an instance of ServerToMl to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

