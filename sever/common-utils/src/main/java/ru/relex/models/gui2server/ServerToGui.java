/*
 * Базовые модели для запросов
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ru.relex.models.gui2server;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
//import io.swagger.client.model.ObjectInfo;
import io.swagger.v3.oas.annotations.media.Schema;
import lombok.Builder;

import java.util.ArrayList;
import java.util.List;
/**
 * Статистика от сервера
 */
@Schema(description = "Статистика от сервера")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-07-24T21:35:33.532498505Z[GMT]")
@Builder
public class ServerToGui {
  @SerializedName("prediction")
  private Integer prediction = null;

  @SerializedName("nearestHotels")
  private List<ObjectInfo> nearestHotels = null;

  @SerializedName("nearestCafe")
  private List<ObjectInfo> nearestCafe = null;

  public ServerToGui prediction(Integer prediction) {
    this.prediction = prediction;
    return this;
  }

   /**
   * Предсказание от ML модели
   * @return prediction
  **/
  @Schema(description = "Предсказание от ML модели")
  public Integer getPrediction() {
    return prediction;
  }

  public void setPrediction(Integer prediction) {
    this.prediction = prediction;
  }

  public ServerToGui nearestHotels(List<ObjectInfo> nearestHotels) {
    this.nearestHotels = nearestHotels;
    return this;
  }

  public ServerToGui addNearestHotelsItem(ObjectInfo nearestHotelsItem) {
    if (this.nearestHotels == null) {
      this.nearestHotels = new ArrayList<ObjectInfo>();
    }
    this.nearestHotels.add(nearestHotelsItem);
    return this;
  }

   /**
   * Список ближайших КСР
   * @return nearestHotels
  **/
  @Schema(description = "Список ближайших КСР")
  public List<ObjectInfo> getNearestHotels() {
    return nearestHotels;
  }

  public void setNearestHotels(List<ObjectInfo> nearestHotels) {
    this.nearestHotels = nearestHotels;
  }

  public ServerToGui nearestCafe(List<ObjectInfo> nearestCafe) {
    this.nearestCafe = nearestCafe;
    return this;
  }

  public ServerToGui addNearestCafeItem(ObjectInfo nearestCafeItem) {
    if (this.nearestCafe == null) {
      this.nearestCafe = new ArrayList<ObjectInfo>();
    }
    this.nearestCafe.add(nearestCafeItem);
    return this;
  }

   /**
   * Список ближайших общепитов
   * @return nearestCafe
  **/
  @Schema(description = "Список ближайших общепитов")
  public List<ObjectInfo> getNearestCafe() {
    return nearestCafe;
  }

  public void setNearestCafe(List<ObjectInfo> nearestCafe) {
    this.nearestCafe = nearestCafe;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServerToGui serverToGui = (ServerToGui) o;
    return Objects.equals(this.prediction, serverToGui.prediction) &&
        Objects.equals(this.nearestHotels, serverToGui.nearestHotels) &&
        Objects.equals(this.nearestCafe, serverToGui.nearestCafe);
  }

  @Override
  public int hashCode() {
    return Objects.hash(prediction, nearestHotels, nearestCafe);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServerToGui {\n");
    
    sb.append("    prediction: ").append(toIndentedString(prediction)).append("\n");
    sb.append("    nearestHotels: ").append(toIndentedString(nearestHotels)).append("\n");
    sb.append("    nearestCafe: ").append(toIndentedString(nearestCafe)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
